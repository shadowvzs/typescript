{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/core/VDom.ts","webpack:///./src/core/JSS.ts","webpack:///./src/core/util/core.ts","webpack:///./src/core/Events.ts","webpack:///./src/components/layout/NavMenu.tsx","webpack:///./src/core/util/performance.ts","webpack:///./src/index.tsx","webpack:///./src/core/Router.ts","webpack:///./src/core/RegExp.ts","webpack:///./src/components/pages/home/HomePage.tsx","webpack:///./src/components/decoratortests/class.ts","webpack:///./src/components/pages/todo/TodoPage.tsx","webpack:///./src/components/pages/todo/sub/TodoContainer.tsx","webpack:///./src/services/index.ts","webpack:///./src/services/TodoService.ts","webpack:///./src/decorators/index.ts","webpack:///./src/model/Todo.ts","webpack:///./src/components/pages/todo/sub/TodoItem.tsx","webpack:///./src/components/decoratortests/meta.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","VDom","rootSelector","hookMap","hookKey","undefined","$recycleBin","document","createElement","events","_safeLoadQueue","namespacedTags","svg","path","Fragment","attrs","this","build","children","$root","querySelector","classAutobind","window","addEventListener","onPageLoaded","forEach","safeLoad","removeEventListener","cb","readyState","push","tagName","elem","assign","filter","x","child","parent","test","$el","k","v","isEventProp","addListener","substr","toLowerCase","indexOf","type","Array","isArray","obj","current","innerHTML","getAttribute","join","toStyle","setAttribute","removeListener","vRef","className","removeAttribute","$oldEl","newEl","$newEl","render","nodeType","$elem","removeChilds","replaceWith","vChild","console","error","vParent","newVParent","mount","xs","ys","zipped","max","Math","min","length","oldAttrs","newAttrs","updates","$node","objFor","update","oldHook","newHook","effect","shouldRun","dep","lastDep","unmountCb","mountCb","appendChild","oldVChildren","newVChildren","childUpdates","additionalUpdates","oldVChild","concat","map","slice","appendUpdateCb","$parent","zip","childNodes","$child","oldVTree","newVTree","info","$App","removeElement","isElement","updateAttrs","updateChildren","vElem","objMerge","childs","downAttrs","func","newTree","container","App","split","toArray","oldTree","keys","removeAttributes","remove","namespace","createElementNS","createDocumentFragment","vNode","createTextNode","renderElem","$oldElem","a","b","idx","findIndex","hook","state","renderSubTree","props","initValue","id","setter","hookSetter","e","stringDep","JSON","stringify","element","flat","attrDown","model","ce","routeComponents","params","lastPageData","title","vTree","pop","cmp","vComponent","loadPage","vDom","refresh","useState","useEffect","useRef","styleCache","_head","getJssRow","c2dashed","convertJSS","jss","classes","prefix","classKey","curKey","curStyles","subStyles","curStyle","wrapperClass","replace","sClasses","sStyles","random","toString","substring","result","btoa","$head","head","getElementsByTagName","style","$style","array2ArrayMap","data","valueMap","add","item","splice","exclude","constructor","getOwnPropertyNames","guid","delay","sec","Promise","resolve","setTimeout","arrayToMap","array","betweenNr","capitalize","toUpperCase","d2capitalize","u2capitalize","isPending","then","isResolved","catch","err","isRejected","finally","fallback","list","parentData","parent_id","$childs","CloneMouseEvent","original","preventDefault","$nodeEventMap","WeakMap","listeners","autoPreventable","customTarget","onDispatch","event","newEvent","target","contains","clone","condition","listener","existingTypes","set","getTarget","oldTypes","has","$oldNode","_","delete","oldType","menuList","css","createStyles","padding","margin","navMenu","backgroundColor","boxSizing","textAlign","display","navItem","color","transition","label","href","arr1","arr2","arr1Len","arr2Len","arr","depth","arrLen","final","finalArray","obj1","obj2","routerConfig","$routeList","success","routeData","log","matchedUrl","url","router","init","Router","MOUSE_BUTTON","history","isValidUrl","startsWith","URL","protocol","hostname","location","URL_DATA","BASE","freeze","PROTOCOL","HOSTNAME","DIR","ROOT","DYNAMIC","HASH","QUERY","PARAMS","onClick","onBack","registerRouter","getFullUrl","root","config","getPath","dispatchRoute","createGlobalClickEvent","onreadystatechange","noHistory","addHistory","pushState","replaceState","newUrl","newChunk","pos","currentRoute","back","redirect","parentElement","warn","ev","button","hash","encodeURI","full_url","queries","q","urlArray","chunk","validations","VComponent","childConfig","chunkArray","entries","validation","validate","components","validateRoute","defaultData","matchedRoute","routeMap","setCurrentRoute","RULES","string","rule","box","maxWidth","borderRadius","marginTop","Pet","age","pista","Date","newConstructor","args","width","border","input","marginBottom","setState","loading","todos","todoService","loadTodos","onDelete","async","deleteTodo","onInput","onKeyUp","addTodo","todo","services","someTodo","created","TodoService","rndDelay","parse","localStorage","getItem","setItem","newTodo","saveTodos","Readonly","MeasureAsync","autobind","propertyKey","descriptor","originalMethod","start","performance","now","apply","finish","limit","newVal","msg","flexDirection","alignItems","justifyContent","cursor","Entity","text","table","instance","index","proxy","Proxy","Reflect","lastProperty","lastValue","showHistory","entity","show"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","import {\n    IEvents\n} from \"./types\";\nimport { concat, map, toArray, forEach, objFor, flat, objMerge } from \"@util/performance\";\nimport { classAutobind } from \"@util/core\";\nimport { events } from \"./Events\";\nimport { toStyle } from \"./JSS\";\n\ntype IAttrs = JSX.Element['attrs'];\ntype IChilds = JSX.Element['children'];\ntype ITagName = string;\n\n// used to rebuild the subtree (it is)\ntype IBuildCustomElem = (arg0: any) => JSX.Element;\ntype IBuildAttr = [IBuildCustomElem, IAttrs];\n\n\n/*\n----------------------------------------------\n---------------- Virtual DOM -----------------\n----------------------------------------------\n*/\n\nexport declare namespace IVDOM {\n    type Childrens = JSX.Element[];\n    type NodeModifier1 = (arg0?: HTMLElementEx) => HTMLElementEx;\n    type NodeModifier2 = (arg0?: HTMLElementEx) => undefined;\n    type NodeModifier = NodeModifier1 | NodeModifier2;\n    type FC = (props: Record<string, string>) => JSX.Element;\n    type partialChildren = Pick<JSX.Element, 'attrs' | 'children'>;\n    type Event = MouseEvent | KeyboardEvent | PopStateEvent;\n    type EventHandler = (event: KeyboardEvent | MouseEvent) => void;\n    type Update = ($node: HTMLElementEx) => HTMLElementEx;\n    type ISetRef = (ref: HTMLElement) => void;\n    type UseState<S> = [S, (state: S) => void]\n    type Ref = { current: HTMLElement | null };\n    interface Hook<S = any, P = any> {\n        id: Symbol;\n        props?: Record<string, any>;\n        state?: S;\n        vElem?: JSX.Element;\n        build?: (props: P) => JSX.Element;\n        effect?: Effect;\n        setter?: (state: S) => void;\n    }\n\n    type EffectCbFn = () => void;\n    type EffectCb = () => EffectCbFn | void;\n    type EffectDep = any[] | undefined;\n    interface Effect {\n        mountCb: EffectCb;\n        unmountCb?: EffectCb;\n        dep: EffectDep;\n        lastDep?: string;\n        shouldRun?: boolean;\n    }\n   \n    interface HookMap {\n        [Symbol.toStringTag](): Hook;\n    }    \n}\n\n// implements IVDOM.Core\nexport class VDom {\n    public $App: HTMLElementEx;\n    public $root: HTMLElementEx;\n    public App: JSX.Element;\n    public hookMap: IVDOM.HookMap = {} as IVDOM.HookMap;\n    public hookKey?: symbol = undefined;\n    private $recycleBin: HTMLDivElement = document.createElement('div');\n    private events: IEvents.Core = events;\n    private lastPageData: [IVDOM.FC[], Record<string, string>];\n    private _safeLoadQueue: (() => void)[] = [];\n    private namespacedTags = {\n        svg: 'http://www.w3.org/2000/svg',\n        path: 'http://www.w3.org/2000/svg'\n    }\n\n    constructor(rootSelector = 'body') {\n        this.$root = document.querySelector(rootSelector) as HTMLElementEx;\n        classAutobind(this);\n        window.addEventListener(\"load\", this.onPageLoaded);\n    }\n\n    public onPageLoaded() {\n        this._safeLoadQueue.forEach(this.safeLoad);\n        window.removeEventListener(\"load\", this.onPageLoaded);\n    }\n\n    // execute the callbacks after the page is loaded\n    private safeLoad(cb: () => void) {\n        if (document.readyState === \"complete\") {\n            cb();\n        } else {\n            this._safeLoadQueue.push(cb);\n        }       \n    }\n\n    // create virtual dom object from given parameters\n    public ce(\n        tagName: ITagName, {\n            attrs = {} as IAttrs,\n            children = [] as IChilds,\n        } = {} as Partial<Omit<JSX.Element, 'tagName'>>\n    ): JSX.Element {\n        if (!attrs) attrs = {};\n        if (!children) children = [];\n\n        if (attrs['children']) {\n            children.push(attrs['children']);\n            delete attrs['children'];\n        }\n\n        const elem: JSX.Element = Object.assign(Object.create(null), {\n            tagName,\n            attrs,\n            children,\n        });\n\n        forEach(children.filter(x => typeof x === 'object' && x !== null), (child: JSX.Element) => {\n            if (!child.attrs) child.attrs = {};\n            child.parent = elem;\n        })\n        return elem;\n    }\n\n    // check if property key is an event property key or no (ex. onclick, onmousedown, onkeydown etc)\n    private isEventProp(name: string): boolean {\n        return /^on/.test(name);\n    }\n\n    // assign a new attribute/event to given element\n    private setAttribute($el: HTMLElementEx, k: string, v: any): HTMLElementEx {\n        if (this.isEventProp(k)) {\n            if (v) this.events.addListener($el, k.substr(2).toLowerCase(), v);\n        } else if (~['key', 'ref', 'html', 'build', 'hookKey'].indexOf(k)) {\n            if (k === 'ref') {\n                const type = typeof v;\n                if (type === 'function') {\n                    v($el);\n                } else if (Array.isArray(v)) {\n                    const [obj, key] = v;\n                    obj[key] = $el;\n                } else if (type === 'object' && v) {\n                    v.current = $el;\n                }\n            } else if (k === 'html') {\n                $el.innerHTML = v;\n            }\n        } else if ($el.getAttribute(k) !== v) {\n            if (k === 'className') { \n                k = 'class';\n                if (Array.isArray(v)) v = v.join(' ');\n            } else if (k === 'style' && v && typeof v === 'object') {\n                v = toStyle(v);\n            }\n            if (v || typeof v === 'number' || $el.getAttribute(k)) $el.setAttribute(k, v);\n        }\n        return $el;\n    }\n\n    // remove attributes/event from given element\n    private removeAttribute($el: HTMLElementEx, k: string): HTMLElementEx {\n        if (this.isEventProp(k)) {\n            this.events.removeListener($el);\n        } else if (~['ref', 'key', 'html', 'build', 'hookKey'].indexOf(k)) {\n            if (k === 'html') {\n                $el.innerHTML = '';\n            } else if (k === 'ref') {\n                if (!$el.vRef) return $el;\n                const v = $el.vRef.attrs[k];\n                const type = typeof v;\n                if (Array.isArray(v)) {\n                    const [obj, key] = v;\n                    obj[key] = null;\n                } else if (type === 'object' && v) {\n                    v.current = null;\n                }\n            } else if (k === 'hookKey' && $el.vRef) {\n                const v: symbol = $el.vRef.attrs.hookKey as symbol;\n                const hook = this.hookMap[v];\n                delete this.hookMap[v];\n            }\n        } else if (k === 'className') {\n            $el.className = '';\n        } else if ($el.getAttribute(k)) {\n            $el.removeAttribute(k);\n        }\n        return $el;\n    }\n\n    // remove all custom attribute from element\n    private removeAttributes($el: HTMLElementEx, attrs: Record<string, any>): void {\n        for (const k in attrs) { this.removeAttribute($el, k); }\n    }\n\n    // Replace existing DON elem with newly created one (note: newEl could be virtual DOM element or real element)\n    public mount($oldEl: HTMLElementEx, newEl: JSX.Element): HTMLElementEx {\n        let $newEl: HTMLElementEx = this.render(newEl as JSX.Element);\n\n        if (!this.$root || $oldEl === this.$root) {\n            this.$root = $newEl;\n        }\n        // update $elem reference in vDom structure for replaced elem\n        if ($oldEl.vRef && $newEl.nodeType === 1) {\n            $oldEl.vRef.$elem = $newEl;\n            if (!$newEl.vRef) $newEl.vRef = newEl;\n            if ($oldEl.vRef.parent) $newEl.vRef.parent = $oldEl.vRef.parent;\n        }\n        this.removeChilds($oldEl);\n        $oldEl.replaceWith($newEl);\n        return $newEl;\n    }\n\n    // insert child into an parent virtual dom object\n    public insertChild($el: HTMLElementEx, vChild: JSX.Element): void {\n        if (!$el || !$el.nodeType || !$el.vRef ) { console.error('Not assigned virtual DOM for real DOM', $el); }\n        const vParent = $el.vRef;\n        if (!vParent || !vParent.children) return;\n        const children = [ ...vParent.children, vChild ];\n        const newVParent = { ...vParent, children };\n        vChild.parent = vParent;\n        this.mount($el, newVParent);\n    }\n\n    // arranging the arrays\n    private zip(xs: IVDOM.NodeModifier[], ys: NodeListOf<ChildNode>): [IVDOM.NodeModifier, ChildNode][] {\n        const zipped: [IVDOM.NodeModifier, ChildNode][] = [];\n        const max = Math.min(xs.length, ys.length);\n        let i = 0;\n        for (; i < max; i++) zipped.push([xs[i], ys[i]]);\n        return zipped;\n    }\n\n    // diffing the attributes and return the patcher function (ex. updateAttrs(oldAttrs, newAttrs)(element))\n    private updateAttrs(oldAttrs: IAttrs, newAttrs?: IAttrs): IVDOM.NodeModifier {\n        const updates: IVDOM.Update[] = [];\n\n        // remove old attributes\n        for (const k in oldAttrs) {\n            if (newAttrs && k in newAttrs && !this.isEventProp(k)) continue;\n            updates.push(($node: HTMLElementEx) => this.removeAttribute($node, k));\n        }\n\n        // set the new attribute\n        if (newAttrs) {\n            objFor<IAttrs>(newAttrs, (k, v) => updates.push(($node: HTMLElementEx) => this.setAttribute($node, k, v)));\n        }\n        \n        return (($node: HTMLElementEx) => {\n            forEach(updates, (update: IVDOM.Update) => update($node));\n            // remove & cache the old hook\n            const oldHook: IVDOM.Hook = oldAttrs.hookKey && this.hookMap[oldAttrs.hookKey];\n            const newHook: IVDOM.Hook = newAttrs && newAttrs.hookKey && this.hookMap[newAttrs.hookKey];\n\n            if (newHook && newHook.effect && newHook.effect.shouldRun) {\n                // && oldHook && oldHook.effect\n                if (!oldHook || !newHook.effect.dep || (oldHook.effect && oldHook.effect.lastDep !== newHook.effect.lastDep)) {\n                    newHook.effect.unmountCb = newHook.effect.mountCb() as IVDOM.EffectCb;\n                }\n            }\n            \n            if (oldHook && oldAttrs.hookKey && (!newAttrs || oldAttrs.hookKey !== newAttrs.hookKey)) {\n                delete this.hookMap[oldAttrs.hookKey];\n            }\n\n            return $node;\n        }) as IVDOM.NodeModifier1;\n    }\n\n    // return patcher, which convert virtual dom child into real dom and insert into an parent element\n    private appendUpdateCb(child: JSX.Element) {\n        return ($node: HTMLElementEx) => {\n            $node.appendChild(this.render(child));\n            return $node;\n        }\n    }\n\n    // diffing the children between 2 virtual dom tree\n    private updateChildren(oldVChildren: JSX.Element[], newVChildren: JSX.Element[]) {\n        const childUpdates: IVDOM.NodeModifier[] = [];\n        const additionalUpdates: IVDOM.NodeModifier[] = [];\n        \n        forEach(oldVChildren, (oldVChild: JSX.Element, i: number) => childUpdates.push(this.update(oldVChild, newVChildren[i])));\n        concat(additionalUpdates, map(newVChildren.slice(oldVChildren.length), this.appendUpdateCb));\n\n        return ($parent: HTMLElementEx) => {\n            const updates = this.zip(childUpdates, $parent.childNodes);\n            forEach(updates, ([update, $child]) => update($child as HTMLElementEx));\n            forEach(additionalUpdates, (update: any) => update($parent));\n            return $parent;\n        };\n    }\n\n    // compare the 2 virtual dom tree and return patcher function (ex. update(oldTree, newTree)(element))\n    private update(oldVTree: JSX.Element, newVTree?: JSX.Element): IVDOM.NodeModifier {\n        if (newVTree === undefined) {\n            if (oldVTree && oldVTree.attrs && oldVTree.attrs.hookKey) { console.info('remove elem'); }\n            return ($node: HTMLElementEx = this.$App) => {\n                this.removeElement($node);\n                return undefined;\n            }\n        }\n\n        if (typeof oldVTree !== 'object' || typeof newVTree !== 'object') {\n            if (oldVTree !== newVTree) {\n                return ($node: HTMLElementEx = this.$App) => this.mount($node, newVTree);\n            } else {\n                return ($node: HTMLElementEx = this.$App) => $node;\n            }\n        }\n\n        if (oldVTree.tagName !== newVTree.tagName) {\n            if (oldVTree.attrs.hookKey) { console.info('replace elem'); }\n            return (($node: HTMLElementEx) => this.mount($node, newVTree)) as IVDOM.NodeModifier1;\n        }\n\n        return ($node: HTMLElementEx = this.$App) => {\n            newVTree.$elem = $node;\n            $node.vRef = newVTree;\n            if (this.isElement($node)) {\n                this.updateAttrs(oldVTree.attrs, newVTree.attrs)($node);\n                this.updateChildren(oldVTree.children || [], newVTree.children || [])($node);\n            }\n            return $node;\n        };\n    }\n\n    private isElement($el: any): boolean {\n        return typeof $el === 'object' && $el.nodeType === 1;\n    }\n\n    private injectAttrs(vElem: JSX.Element, attrs: IAttrs) {\n        objMerge(vElem.attrs, attrs);\n        return vElem;\n    }\n\n    // Attribute propagation-\n    public attrDown(childs: IChilds, downAttrs: IAttrs) {\n        if (!childs || !childs.length || !downAttrs) return;\n        childs.forEach((x, i) => {\n            if (x && x.attrs && x.attrs.build) {\n                const [func, attrs] = x.attrs.build;\n                const newTree = func({...attrs, ...downAttrs}) as JSX.Element;\n                childs[i] = newTree;\n            }\n        });\n    }\n\n    public find(tagName: ITagName, attrs: Record<string, any>, container: JSX.Element = this.App) {\n        const attrArr = attrs ? attrs.split(',').map(x => x.split('=')) : [];\n    }\n\n    // loop over all child and call the removeElement method\n    private removeChilds($elem: HTMLElementEx): void {\n        if (!$elem.children) { return; }\n        forEach(toArray($elem.children), ($el) => this.removeElement($el as HTMLElementEx));\n    }\n\n    // remove real dom element but also remove attributes and set isMount property to false (call unmount callback)\n    public removeElement($elem: HTMLElementEx): void {\n        if (!$elem) { return; }\n        if ($elem.children) { this.removeChilds($elem); }\n        const oldTree = $elem.vRef;\n        if (oldTree) {\n            const attrs = oldTree.attrs;\n            if (Object.keys(attrs).length) this.removeAttributes($elem, attrs);\n            this.events.removeListener($elem);\n        }\n        // remove from DOM tree\n        $elem.remove();\n        // Mysterious solution, add into another div then we use innerHTML and that remove from memory\n        // but maybe i will reuse the DOM in future\n        this.$recycleBin.appendChild($elem);\n        this.$recycleBin.innerHTML = '';\n    }\n\n    // convert virtual dom element into real dom element and insert his childrens\n    public renderElem({ tagName = 'div', attrs, children = [] }: JSX.Element) {\n        const namespace: string = this.namespacedTags[tagName];\n        const $el: HTMLElementEx = namespace\n            ? document.createElementNS(namespace, tagName) as HTMLElementEx\n            : tagName === 'fragment' \n                ? document.createDocumentFragment() as any\n                : document.createElement(tagName) as HTMLElementEx;\n        this.updateAttrs([], attrs)($el);\n        forEach(children, (x: JSX.Element) => $el.appendChild(this.render(x)));\n        return $el;\n    }\n\n    // convert virtual dom object into real dom element, assign his virtual dom object and return the real dom\n    public render(vNode: JSX.Element): HTMLElementEx {\n        if (typeof vNode !== 'object') return document.createTextNode(vNode || '') as unknown as HTMLElementEx;\n        const $elem: HTMLElementEx = this.renderElem(vNode);\n        $elem.vRef = vNode;     // get virtual DOM from real Elem\n        vNode.$elem = $elem;    // get the real DOM from virtual DOM\n        return $elem;\n    }\n\n    // update & render a virtual dom subtree\n    public renderSubTree($oldElem: HTMLElementEx, a: IBuildCustomElem, b: any): void {\n        const oldTree = $oldElem.vRef;\n        if (oldTree) b['oldSym'] = oldTree.attrs.hookKey;\n        const newTree = this.build(a, b);\n        if (!oldTree) {\n            console.error('Virtual tree on dom not exist!');\n            this.mount($oldElem, newTree);\n            return;\n        }\n        const vParent = oldTree.parent as JSX.Element;\n        const idx = vParent.children.findIndex(x => x === oldTree);\n        vParent.children[idx === -1 ? 0 : idx] = newTree;\n        newTree.parent = vParent;\n        // newTree.attrs.hookKey = oldTree.attrs.hookKey;\n        // newTree.attrs.build = oldTree.attrs.build;\n        $oldElem.vRef = newTree;\n        const $newElem = this.update(oldTree, newTree)($oldElem) as HTMLElementEx;\n        $newElem.vRef = newTree;\n    }\n\n    public hookSetter<S>(key: symbol) {\n        return (value: S) => {\n            const hook = this.hookMap[key]\n            if (!hook) return console.error('Hook setter: Hook not exist', value);\n            if (!hook.vElem) return console.error('Hook setter: Missing the vElem from the hook', hook, value);\n            hook.state = value;\n            const $el = hook.vElem.$elem;\n            if (!$el) return console.error('Hook setter: Missing element from vTree', hook);\n            this.hookKey = key;\n            this.renderSubTree($el, hook.build, hook.props);\n            this.hookKey = undefined;\n        };\n    }\n\n   public useState<S>(initValue: S): IVDOM.UseState<S> {\n        if (this.hookKey) {\n            let hook: IVDOM.Hook = this.hookMap[this.hookKey];\n            if (!hook) {\n                this.hookMap[this.hookKey] = hook = {\n                    id: this.hookKey\n                };\n            }\n            if (!hook.setter) {\n                hook.state = initValue;\n                hook.setter = this.hookSetter(this.hookKey);\n            }\n            return [hook.state, hook.setter];\n        } else {\n            console.error('Use useState in functional component!')\n            return [null as any, (e) => {}];\n        }\n    }\n\n    public useEffect(cb: IVDOM.EffectCb, dep?: IVDOM.EffectDep): void {\n        if (this.hookKey) {\n            // EffectCb\n            let hook: IVDOM.Hook = this.hookMap[this.hookKey];\n            if (!hook) {\n                this.hookMap[this.hookKey] = hook = {\n                    id: this.hookKey\n                };\n            }\n            if (!hook.effect) {\n                hook.effect = {\n                    mountCb: cb,\n                    dep: dep,\n                    lastDep: undefined,\n                    shouldRun: true,\n                }\n            }\n            const stringDep = dep ? JSON.stringify(dep) : undefined;\n            hook.effect.shouldRun = !dep || stringDep !== hook.effect.lastDep;\n            hook.effect.lastDep = stringDep;\n        } else {\n            console.error('Use useEffect in functional component!')\n        }\n    }\n\n    public useRef(): IVDOM.Ref {\n        return {\n            current: null\n        };\n    }\n\n    public build(element: string | IBuildCustomElem, attrs: IAttrs = {}, ...children: JSX.Element[] | JSX.Element[][]): JSX.Element {\n        children = (children ? flat(children as JSX.Element[], 1) : []);\n        if (typeof element === 'function') {\n            let key = Symbol('fn');\n            if (attrs && attrs['oldSym']) {\n                key = attrs['oldSym'];\n                delete attrs['oldSym'];\n            }\n            this.hookKey = key;\n            attrs = { ...(attrs || {}), children: children};\n            const vElem = element(attrs) as JSX.Element;\n            vElem.attrs.build = [element, attrs] as IBuildAttr;\n            if (vElem.tagName === 'form' && attrs['model']) {\n                this.attrDown(vElem.children, { model: attrs.model } as IAttrs);\n            }\n            if (this.hookMap[key]) {\n                const hook: IVDOM.Hook = this.hookMap[key];\n                hook.build = element;\n                hook.props = attrs;\n                hook.vElem = vElem;\n                vElem.attrs.hookKey = key;\n            }\n            this.hookKey = undefined;\n            return vElem;\n        }\n        return this.ce(element, { attrs, children } as Omit<JSX.Element, 'tagName'>);\n    }\n\n    // rerender the virtual dom tree based on route data (function array with params)\n    public loadPage(routeComponents: IBuildCustomElem[], params: Record<string, string>): void {\n        let vComponent: JSX.Element | undefined;\n        this.lastPageData = [routeComponents, params];\n        document.title = 'Loading';\n        if (!routeComponents || !routeComponents.length) { return console.error('Missing route components'); }\n        let vTree: JSX.Element = this.build(routeComponents.pop() as IBuildCustomElem, params);\n        \n        do {\n            const cmp = routeComponents.pop();\n            if (!cmp) break;\n            const vElem = this.build(cmp, params);\n            vElem.children.push(vTree);\n            vTree = vElem;\n        } while (vComponent);\n\n        vTree.parent = {\n            tagName: 'div',\n            attrs: {},\n            children: [vTree]\n        };\n\n        if (!this.$App) {\n            this.App = vTree;\n            this.$App = this.render(this.App) as HTMLElementEx;\n            this.$App.vRef = this.App;\n            this.$root.appendChild(this.$App);\n        } else {\n            this.$App = this.update(this.App, vTree)(this.$App) as HTMLElementEx;\n            this.App = vTree;\n        }        \n\n    }\n\n    // refresh the whole dom tree with last data\n    public refresh(): void {\n        this.loadPage(...this.lastPageData);\n    }\n\n    public Fragment = (attrs: IAttrs) => {\n        return this.build('fragment', {}, attrs.children);\n    }\n}\n\n\nexport const vDom = new VDom('#root');\n\nexport const build = vDom.build;\nexport const Fragment = vDom.Fragment;\nexport const ce = vDom.ce;\nexport const mount = vDom.mount;\nexport const render = vDom.render;\nexport const renderElem = vDom.renderElem;\nexport const refresh = vDom.refresh;\nexport const removeElement = vDom.removeElement;\nexport const renderSubTree = vDom.renderSubTree;\nexport const attrDown = vDom.attrDown;\nexport const useState = vDom.useState.bind(vDom);\nexport const useEffect = vDom.useEffect.bind(vDom);\nexport const useRef = vDom.useRef;\n\ndeclare global {\n    interface HTMLElementEx extends HTMLElement{\n        childNodes: NodeListOf<ChildNode>;\n        dataset: Record<string, string>;\n        nodeType: number;\n        setAttribute: (key: string, value: any) => void;\n        uuid?: string;\n        vRef?: JSX.Element;\n    }\n\n    export namespace JSX {\n        \n        interface FragmentProperty { Fragment: {}; }\n\n        interface Attrs extends Record<string, any> {\n            hookKey?: symbol;\n        }\n\n        interface Element { \n            attrs: Attrs,\n            children: JSX.Element[];\n            $elem?: HTMLElementEx;\n            parent?: JSX.Element;\n            tagName: string;\n        }\n        interface IntrinsicElements { \n            [key: string]: any;\n        }\n    }\n}\n\n// test purpose\n// @ts-ignore\nwindow.vDom = vDom;\n","\nimport { JSS } from \"./types\";\nimport { objFor, objMerge } from \"@util/performance\";\nimport { c2dashed } from '@util/core';\n\ninterface IClasses {\n    [key: string]: string | IClasses;\n}\n\n// cache the built styles and the head element\nconst styleCache: IClasses = {};\nlet _head: HTMLHeadElement;\n\n// get a single css style row from name and property\nconst getJssRow = (name: string, value: number | string) => {\n    if (typeof value === 'number' && ['opacity', 'zIndex', 'flex'].indexOf(name) < 0) {\n        value =  value + 'px';\n    }\n    return `${c2dashed(name)}: ${value};`;\n}\n\n    // convert JSS to string\nconst convertJSS = (jss: JSS.CssProperties, classes: IClasses = {}, prefix: string = ''): [IClasses, string] => {\n    let curKey = '';\n    let classKey: string;\n    const curStyles: string[] = [];\n    const subStyles: string[] = [];\n    let curStyle: string;\n    let wrapperClass: string;\n    objFor(jss, (key, props) => {\n        if (key[0] === '&') {\n            // normal selectors\n            classKey = key.replace(/\\&/g, prefix);\n        } else if (key[0] === '@') {\n            // media query\n            classKey = key;\n            wrapperClass = key + ` {\\r\\n`;\n            subStyles.length = 0;\n            objFor(props, (name, value) => {\n                if (typeof value === 'undefined') {\n                    return;\n                } else if (typeof value === 'object') {\n                    if (!classes[name]) classes[name] = {};\n                    const [sClasses, sStyles] = convertJSS({ [name]: value }, {}, '');\n                    subStyles.push(sStyles);\n                    classes[name] = sClasses;\n                } else {\n                    wrapperClass += '\\t' + getJssRow(name, value as string | number) + '\\r\\n';\n                }\n            });\n            wrapperClass += subStyles.join('') + `}\\r\\n`;\n            curStyles.push(wrapperClass);\n            return [classes[classKey], curStyle];\n        } else {\n            // dynamic named classNames\n            curKey = `p_${Math.random().toString(36).substring(2)}`;\n            classKey = `${(prefix ? prefix + ' ' : '')}.${curKey}`;\n            classes[key] = curKey;\n        }\n\n        curStyle = `${classKey} { \\r\\n`;\n        objFor(props, (name, value) => {\n            if (typeof value === 'undefined') {\n                return;\n            } else if (typeof value === 'object') {\n                if (!classes[name]) classes[name] = {};\n                const [sClasses, sStyles] = convertJSS({ [name]: value }, classes[name] as IClasses, classKey);\n                curStyles.push(sStyles);\n                classes[name] = sClasses;\n            } else {\n                curStyle += '\\t' + getJssRow(name, value as string | number) + '\\r\\n';\n            }\n        });\n        curStyles.push(curStyle + `}\\r\\n\\r\\n`);\n    });\n    \n    return [classes, curStyles.join('')];  \n}\n\nexport const toStyle = (jss: JSS.StyleRule) => {\n    const result: string[] = [];\n    objFor(jss, (name, value) => typeof value !== 'undefined' && result.push(getJssRow(name, value)));\n    return result.join('');\n}\n\nconst getHead = () => {\n    if (_head) return _head;\n    return _head = document.head || document.getElementsByTagName('head')[0];\n}\n\n// create styles\nexport function createStyles(jss: JSS.WithStyle, name?: string): IClasses {\n    const keys = Object.keys(jss);\n    if (!keys.length) return {};\n    const id = btoa(JSON.stringify(keys));\n    if (styleCache[id]) return styleCache[id] as IClasses;\n    const $head = getHead();\n    const [classes, style] = convertJSS(jss);\n    styleCache[id] = classes;\n    const $style = document.createElement('style');\n    $style.type = 'text/css';\n    $style.setAttribute('data-id', `custom component ${name || ''}`);\n    $style.appendChild(document.createTextNode(style));\n    // load styles after page is loaded else our style should be ignored\n    $head.appendChild($style);\n    return classes as IClasses;\n}\n","import { \n    IFPromise,\n    IRequest\n} from \"@typo\";\n\nexport const classAutobind = (t: any, exclude: string[] = []) => {\n    const prototype = t.constructor.prototype;\n    Object.getOwnPropertyNames(prototype)\n        .filter((key) => (typeof prototype[key] === 'function') && key !== 'constructor')\n        .filter((key) => !~exclude.indexOf(key))\n        .forEach((key) => t[key] = t[key].bind(t));\n}\n\nexport const guid = (): string => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c: string) => {\n        const r: number = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nexport const delay = (sec: number) => {\n    return new Promise((resolve) => {\n        setTimeout(() => resolve(), sec * 1000);\n    });\n}\n\nexport const arrayToMap = (array: string[]): Record<string, string|number> => {\n    const obj: Record<string, string|number> = {};\n    array.forEach((x: string, i: number) => {\n        obj[x] = i;\n        obj[i] = x;\n    });\n    return obj;\n}\n\nexport const betweenNr = (value: number, [min, max]: [number, number]) => {\n    return Math.max(Math.min(value, max), min);\n}\n\nexport const capitalize = (t: string) => t[0].toUpperCase() + t.substr(1);\n// dash to capitalized word\nexport const d2capitalize = (t: string) => t.replace(/(^|\\-)./g, s => s.slice(-1).toUpperCase());\n// underscore to capitalized word\nexport const u2capitalize = (t: string) => t.replace(/(^|_)./g, s => s.slice(-1).toUpperCase());\n// \nexport const c2dashed = (x: string): string => x.replace(/[A-Z]/g, m => \"-\" + m.toLowerCase());\n\n// Type alias for shorter code :)\ntype AR<T> = IRequest.ApiResponse<T>;\nexport type PromiseCb<T> = (resolve: any, reject?: any) => Promise<AR<T>>;\nexport function fPromise <T>(c: PromiseCb<AR<T>> | Promise<AR<T>> | IFPromise<AR<T>>): IFPromise<AR<T>> {\n    if ((c as  IFPromise<AR<T>>).isPending === false) return c as IFPromise<AR<T>>;\n    const r: IFPromise<AR<T>> = ((typeof c === 'function' ? new Promise(c) : c) as Promise<AR<T>>)\n        .then((x: AR<T>) => {\n            r.isResolved = true;\n            r.result = x;\n            return x;\n        })\n        .catch((err: any) => {\n            r.isRejected = true;\n            r.result = err;\n            throw err;\n        })\n        .finally(() => {\n            r.isPending = false;\n        })\n\n    r.isPending = true;\n    r.isResolved = false;\n    r.isRejected = false;\n    r.result = undefined;\n    return r;\n}\n\nexport function getDeepProp(obj: Record<string, any> = {}, keys: string = '', fallback?: any): any {\n    const key = keys.split('.');\n    const max = key.length;\n    let i = 0;\n    for (; i < max && obj; i++) obj = obj[key[i]];\n    return i === max && obj ? obj : fallback;\n}\n\ninterface IValueMap<T> {\n    [key: string]: T;\n}\n\ntype ITreeBaseProp = { id: number; parent_id: number; $childs?: ITreeBaseProp[]; };\nexport function createTreeValueMap<T extends ITreeBaseProp>(list: T[] = [], key: string = 'id', parentData: Partial<T>): IArrayValueMap<T> {\n    const map =  array2ArrayMap(list);\n    map.valueMap[0] = {\n        id: 0,\n        parent_id: -1,\n        $childs: [],\n        ...parentData\n    } as unknown as T;\n    map.forEach(x => {\n        const parent = map.valueMap[x.parent_id];\n        if (!parent) return;\n        parent.$childs = parent.$childs ? [...parent.$childs, x] : [x];        \n    });\n    return map;\n}\n\nexport interface IArrayValueMap<T> {\n    [key: number]: T;\n    valueMap: IValueMap<T>;\n    length: number;\n    push: (arg0: T) => number;\n    pop: () => number;\n    add: (arg0: T) => void;\n    remove: (arg0: string | number) => void;\n    splice: (arg0: number, arg1: number, arg2?: T) => T[];\n    findIndex: (arg0: (arg0: T, arg1?: number) => boolean) => number;\n    map: (arg0: (arg0: T, arg1?: number) => any) => any[];\n    forEach: (arg0: (arg0: T, arg1?: number) => void) => void;\n}\n\nexport function array2ArrayMap<T>(data: T[] = [], key: string = 'id'): IArrayValueMap<T> {\n    const result = new Array() as unknown as IArrayValueMap<T>;\n    result.length = data.length;\n    result.valueMap = {};\n    data.forEach((x, i) => {\n        result[i] = x;\n        result.valueMap[x[key]] = x;\n    });\n    result.add = function(item: T) {\n        result.push(item);\n        result.valueMap[item[key]] = item;\n    }\n    result.remove = function(id: string | number) {\n        result.splice(result.findIndex(x => x[key] === id), 1);\n        delete result.valueMap[id];\n    }    \n    return result;\n}","import {\n    IEvents\n} from \"./types\";\n\n/**\n * @constructor\n * @this CloneMouseEvent\n */\nfunction CloneMouseEvent( e: Record<string, any> ): void {\n    for (const k in e) {\n        this[k] = e[k];\n    }\n    this.original = e;\n    this.preventDefault = function() { this.original.preventDefault(); }\n}\n\nclass Events implements IEvents.Core {\n    private $nodeEventMap: WeakMap<object, any[]> = new WeakMap([]);\n    private listeners: IEvents.Listeners = {};\n    private autoPreventable: string[] = ['submit'];\n    private customTarget = {\n        'popstate': window\n    };\n\n    constructor() {\n        this.onDispatch = this.onDispatch.bind(this);\n        this.addListener = this.addListener.bind(this);\n    }\n\n    // create an event object from original event\n    private clone($node: Element, event: Event): Event {\n        const newEvent = new CloneMouseEvent(event);\n        newEvent.target = $node;\n        return newEvent;\n    }\n\n    // if an event was fired then we go over on every callback which was assigned to this event type (ex. click)\n    private onDispatch(event: Event): void {\n        const type: string = event.type;\n        if (~this.autoPreventable.indexOf(type)) event.preventDefault();\n        this.listeners[type].forEach(([c, cb]: IEvents.Listener) => {\n            if (typeof c === 'boolean') {\n                if (c) return cb(event)\n            } else if (typeof c === 'function') {\n                if (c(event)) return cb(event)\n            } else if (typeof c === 'object') {\n                const $node = c;\n                return ($node === event.target || $node.contains(event.target as Node))\n                        && cb(this.clone($node, event))\n            }\n        });\n    }\n\n    // assign an new callback into the global event listeners (if listener still not exist then create one)\n    public addListener(condition: IEvents.Condition, type: string, cb: IEvents.EventCallback): void {\n        let listener;\n        if (typeof condition === 'object' && condition.nodeType) {\n            const $node = condition;\n            const existingTypes = this.$nodeEventMap.get($node) || [];\n            if (~existingTypes.indexOf(type)) { return; }\n            existingTypes.splice(0, 0, type);\n            this.$nodeEventMap.set($node, existingTypes);\n            listener = [condition, cb] as IEvents.NodeListener;\n        } else {\n            listener = [condition, cb] as IEvents.ConditionalListener;\n        }\n\n        if (!this.listeners[type]) {\n            this.getTarget(type).addEventListener(type, this.onDispatch as EventListenerOrEventListenerObject, true);\n            this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n    }\n\n    // remove an eventlistener callback\n    public removeListener(condition: HTMLElementEx | IEvents.EventCallback, type?: string): void {\n        let oldTypes: string[];\n        let filter: (arg0: any) => boolean;\n        // console.log('remove listener', arguments)\n        if (typeof condition === 'object') {\n            const $node = condition;\n            if (!this.$nodeEventMap.has($node)) { return; }\n            oldTypes = type ? [type] : this.$nodeEventMap.get($node) as string[];\n            filter = ([$oldNode, _]: IEvents.NodeListener) => $oldNode !== $node;\n            this.$nodeEventMap.delete($node);\n        } else {\n            oldTypes = [type as string];\n            filter = ([_, cb]: IEvents.NodeListener) => cb !== condition;\n        }\n\n        oldTypes.forEach((oldType) => {\n            this.listeners[oldType] = this.listeners[oldType].filter(filter);\n            if (!this.listeners[oldType].length) {\n                this.getTarget(oldType).removeEventListener(oldType, this.onDispatch as EventListenerOrEventListenerObject);\n                // console.log(`Removed the listener: ${oldType} event`);\n            }\n        });\n    }\n\n    private getTarget(type: string): HTMLElement | HTMLDocument {\n        if (this.customTarget[type]) return this.customTarget[type];\n        return document;\n    }\n}\n\nexport const events = new Events();\n\n// test purpose\n// @ts-ignore\nwindow.events = events;\n","import { build } from \"@core/VDom\";\nimport { createStyles } from \"@core/JSS\";\n\nconst menuList = [\n    ['Home', '/home'],\n    ['Todos', '/todo']\n];\n\nconst css = createStyles({\n    '&body': {\n        padding: 0,\n        margin: 0\n    },\n    navMenu: {\n        backgroundColor: '#ddd',\n        padding: 0,\n        margin: 0,\n        boxSizing: 'border-box',\n        textAlign: 'center',\n        display: 'block'\n    },\n    navItem: {\n        padding: 16,\n        color: '#000',\n        backgroundColor: '#eee',\n        transition: '0.7s',\n        display: 'inline-block',\n        '&:hover': {\n            color: '#fff'\n        }\n    }\n});\n\nconst NavMenu = (): JSX.Element => {\n    return (\n        <div className={css.navMenu}>\n            { menuList.map(([label, path]) => (\n                <a href={path} className={css.navItem} title={'go to: ' + path}> { label } </a>\n            ))}\n        </div>\n    );\n};\n\nexport default NavMenu;\n","import { \n    StrKeyOf \n} from \"@typo\";\n\n/* Array methods */\n\nexport function flat<T>(arr: T[] | T[][], depth: number = 1) {\n    const arrLen = arr.length;\n    const final: T[] = [];\n    let i = 0;\n    for(; i < arrLen; i++) {\n        if (Array.isArray(arr[i])) {\n            concat(final, depth ? flat<T>(arr[i] as T[], depth - 1) : arr[i] as T[]);\n        } else {\n            final.push(arr[i] as T);\n        }\n    }\n    return final;\n}\n\nexport function concat(arr1: any, arr2: any[]): any[] {\n    const arr1Len = arr1.length;\n    const arr2Len = arr2.length;\n    let i = 0;\n    arr1.length = arr1Len + arr2Len;\n    for(; i < arr2Len; i++) arr1[arr1Len + i] = arr2[i];\n    return arr1;\n}\n\ntype IForEachCb<T> = (arg0: T, arg1: number) => void;\nexport function forEach<T>(arr: T[], cb: IForEachCb<T>): void {\n    const arrLen = arr.length;\n    let i = 0;\n    for(; i < arrLen; i++) cb(arr[i], i);\n}\n\ntype IMapCb<T> = (arg0: T, arg1?: number) => any;\nexport function map<T>(arr: any, cb: IMapCb<T>): any[] {\n    const finalArray: T[] = [];\n    const arrLen = arr.length;\n    finalArray.length = arrLen;\n    let i = 0;\n    for(; i < arrLen; i++) finalArray[i] = cb(arr[i], i);\n    return finalArray;\n}\n\nexport function toArray(obj: Record<string, any>): any[] {\n    return Array.prototype.slice.call(obj);\n}\n\n/* Object methods */\ntype IObjForCb<T> = (arg0: StrKeyOf<T>, arg1: Partial<T[keyof T]>) => void;\nexport function objFor<T>(obj: T, cb: IObjForCb<T>) {\n    let k: StrKeyOf<T>;\n    for (k in obj) cb(k, obj[k]);\n}\n\nexport function objConcat<T, K>(obj1: T, obj2: K): T & K {\n    const result = {} as T & K;\n    let key: string;\n    for (key in obj1) result[key] = obj1[key];\n    for (key in obj2) result[key] = obj2[key];\n    return result;\n}\n\nexport function objMerge<T, K>(obj1: T, obj2: K): T & K {\n    if (!obj1) obj1 = {} as T;\n    let key: string;\n    for (key in obj2) obj1[key] = obj2[key];\n    return obj1 as T & K;\n}\n\ntype IObjMapCb = (arg0: any) => any;\nexport function objMap(obj: Record<string, any>, cb: IObjMapCb) {\n    const result: Record<string, any> = {};\n    let k: string;\n    for (k in obj) result[k] = cb(obj[k]);\n    return result;\n}\n\nexport function objValues<T>(obj: Record<string, any>): T[] {\n    const result: T[] = [];\n    let k: string;\n    for (k in obj) result.push(obj[k]);\n    return result;\n}","import { router } from \"@core/Router\";\nimport { IRouter } from \"@typo\";\n\nimport HomePage from \"@pages/home/HomePage\";\nimport TodoPage from \"@pages/todo/TodoPage\";\n\nimport { vDom } from \"@core/VDom\";\n\nconst routeMap: IRouter.Route[] = [\n    ['', [], HomePage, null],\n    ['home', [], HomePage, null],\n    ['todo', [], TodoPage, null],\n    ['todo/:id', ['string'], TodoPage, null],\n];\n\nconst routerConfig: IRouter.Config = {\n    // route map and this we pass to router class\n    $routeList: routeMap,\n    vDom: vDom,\n    // callback for valid routes, debug purpose\n    success: (routeData: IRouter.Data) => { console.log('%c Route matched callback', 'color:#070;font-size:14px;', routeData.matchedUrl) },\n    // callback for invalid routes, debug purpose\n    error: (url: string) => { console.log('%c Route assignment missing', 'color:red;font-size:20px', url) },\n}\n\n// start the project\n// it is check the url and compare with routeMap\n//   - go over each routeMap array and check if route match and if yes then call the component \n//      ex. ['home', [], HomePage, null] - localhost/home -> mount HomePage component into div#root in index.html\n//   - a more complex route when we need dynamic url params like category id and article slug:\n//      ex. ['article/:category/:slug', ['NUMBER', 'SLUG'], ArticlePage, null], - localhost/article/2214/my-article-name-2\n//          this verify the static part (article) and check if :category and :slug is valid number and slug with RegExp \n//          if everything ok then we mount ArticlePage component and send this dynamic url params into component like: \n//                      { category: 2214, slug: '2214/my-article-name-2' }\nrouter.init(routerConfig);\n","import {\n    IRouter,\n} from \"./types\";\n\nimport { validate } from \"./RegExp\";\nimport { vDom } from \"@core/VDom\";\nimport { events } from \"@core/Events\";\n\nexport class Router implements IRouter.Core {\n    private events = events;\n    private URL_DATA: IRouter.IURL_DATA;\n    private MOUSE_BUTTON: string[] = ['left', 'middle', 'right'];\n    public config: IRouter.Config;\n    public currentRoute: string;\n    public history: IRouter.HistoryItem[] = [];\n\n    constructor() {\n        const { protocol, hostname } = location as Location;\n        const baseDir = '';   // it is empty if project is in root directory\n        this.URL_DATA = {\n            BASE: Object.freeze({\n                PROTOCOL: protocol,\n                HOSTNAME: hostname,\n                DIR: baseDir,\n                ROOT: protocol + '//' + hostname + baseDir,\n            }),\n            DYNAMIC: {\n                HASH: null,\n                QUERY: {},\n                URL: null,\n                PARAMS: {}\n            }\n        }\n\n        this.onClick = this.onClick.bind(this);\n        this.onBack = this.onBack.bind(this);\n        this.registerRouter();\n        this.getFullUrl();\n    }\n\n    public getFullUrl(url: string = '') {\n        const root = this.URL_DATA.BASE.ROOT;\n        if (root.substr(-1) !== '/' && url && url[0] !== '/') url = '/' + url;\n        return root + url;\n    }\n\n    public init(config: IRouter.Config): void {\n        this.config = config;\n        const { URL } = this.getPath();\n        this.history.push({ url: URL, title: '', props: null});\n        this.dispatchRoute(URL);\n    }\n\n    // we must assign click and popstate global listener after page loaded\n    private registerRouter(): void {\n        if (document.readyState === 'complete') {\n            this.createGlobalClickEvent();\n        } else {\n            document.onreadystatechange = () => {\n                document.readyState === 'complete' && this.createGlobalClickEvent();\n            };\n        }\n    }\n\n    // register our events in events instance, register the events like in event instance\n    private createGlobalClickEvent(): void {\n        this.events.addListener(true, 'click', this.onClick);\n        this.events.addListener(true, 'popstate', this.onBack);\n    }\n\n    // check the gived routes and if everything ok then redirect the page\n    public redirect(url?: string, title?: string, props: object | null = null, noHistory: boolean = false): void {\n        const { ROOT } = this.URL_DATA.BASE;\n        const { URL } = this.getPath();\n\n        if (!url || url === URL) return;\n        this.addHistory(url, title, props, noHistory);\n        this.dispatchRoute(url);\n    }\n\n    private addHistory(url: string, title?: string, props?: Record<string, any> | null, noHistory?: boolean) {\n        const { ROOT } = this.URL_DATA.BASE;\n        history.pushState(null, title || '', ROOT + url);\n        history.replaceState(null, title || '', ROOT + url);\n        if (!noHistory) this.history.push({ url, title, props: props });        \n    }\n\n    // check the gived routes and if everything ok then redirect the page\n    public removeLastUrlChunk(): void {\n        if (!this.history.length) return;\n        const { title, url } = this.history[this.history.length - 1];\n        const newUrl = (url[0] === '/' ? '' : '/') + url.split('/').slice(0, -1).join('/');\n        this.addHistory(newUrl, title);\n    }\n\n    public replaceUrlChunk(newChunk: string, pos: number = -1, title?: string) {\n        const newUrl = this.currentRoute.split('/');\n        newUrl.splice(-1, 1, newChunk);\n        if (!title && this.history.length) title = this.history[this.history.length - 1].title;\n        this.addHistory(newUrl.join('/'), title);\n    }\n\n    private isValidUrl = (url: string): boolean => {\n        if (!url.startsWith('http')) url = 'https://' + url;\n        try {\n            new URL(url);\n            return true;\n        } catch (err) {\n            return false;  \n        }\n    }\n\n    // popstate callback which fired when user click to back button in the browser\n    private onBack(event: Event): void {\n        const length = this.history.length;\n        console.log('BACK', length, this.history)\n        if (length < 2) return history.back();\n        this.history.pop();\n        const { url, title, props } = this.history[length-2] as IRouter.HistoryItem;\n        this.redirect(url, title, props);\n        event.preventDefault();\n        // Uncomment below line to redirect to the previous page instead.\n        // window.location = document.referrer // Note: IE11 is not supporting this.\n        // history.pushprops(null, null, window.location.pathname);\n    }\n\n    // check if parent element got href (=potentional internal link) attribute or no (max 3 level)\n    private getTarget(e: HTMLElement): string | void {\n        const MAX_DEPTH = 3;\n        let t = e, i = 0, href;\n        for (; i < MAX_DEPTH; i++) {\n            if (href = t.getAttribute(\"href\")) {\n                break;\n            } else {\n                t = t.parentElement as HTMLElement;\n                if (!t) return console.warn('no href on clicked target also no parent');\n            }\n        }\n        return href\n    }\n\n    // click handler for internal links\n    private onClick (event: Event): void {\n        const ev = event as MouseEvent;\n        if (ev.button > 0) {\n            return console.log('it was not left click, it was '+(this.MOUSE_BUTTON[ev.button] || 'unknow')+' button');\n        }\n        const t = event.target as HTMLElement;\n        const href = this.getTarget(t);\n        if (!href) return;\n        // internal link handle redirect(url)\n        if (href[0] === \"/\") {\n            event.preventDefault();\n            this.redirect(href);\n        } else if (href === '*') {\n            /*\n            if (t.getAttribute('download')) {\n                const url = t.getAttribute('download');\n                if (this.isValidUrl(url)) fs.download(url);\n            }\n            */\n        } else {\n            console.log('normal link redirect to other page');\n        }\n    }\n\n    // split the current url into query strings, hash, base url etc\n    private getPath() {\n        const { ROOT } = this.URL_DATA.BASE;\n        const HASH = window.location.hash;\n        const href = encodeURI(location.href);\n        const full_url = href.substring(ROOT.length + 1, href.length - HASH.length);\n        const QUERY: Record<string, string> = {};\n        const [ URL, queries = false ] = full_url.split('?');\n\n        if (queries && queries.length) {\n            queries.split('&').forEach( q => {\n                const [key, value] = q.split('=');\n                QUERY[key] = value;\n            });\n        }\n        return this.URL_DATA.DYNAMIC = {\n            ...this.URL_DATA.DYNAMIC,\n            HASH: HASH.replace('#', ''),\n            QUERY,\n            URL\n        };\n    }\n\n    // go over on routes and check if the given url is fulfilled all condition\n    private validateRoute(config: IRouter.Route, data: IRouter.Data): IRouter.Data | undefined {\n        const urlArray = data.urlArray.slice(data.depth);\n        const params: Record<string, string> = {};\n        const [chunk, validations, VComponent, childConfig] = config;\n        const chunkArray = chunk.split('/');\n\n        if (chunkArray.length === 1 && !chunkArray[0] && !urlArray.length) {\n            // default route\n        } else if (chunkArray.length > urlArray.length) {\n            return;\n        } else {\n            for (let [i, v] of chunkArray.entries()) {\n                if (!v) return;\n                if (v[0] === ':') {\n                    v = v.substr(1);\n                    if (validations) {\n                        const validation = validations[Object.keys(params).length];\n                        if (!validate(urlArray[i], validation)) return;\n                    }\n                    params[v] = urlArray[i];\n                } else {\n                    if (v !== urlArray[i]) return;\n                }\n            }\n        }\n\n        data.depth += chunkArray.length;\n        Object.assign(data.params, {...params});\n        data.components.push(VComponent);\n\n        // if exist child and we still have remining chunk in current url then go deeper\n        if (Array.isArray(childConfig) && data.depth < data.urlArray.length) {\n            return this.validateRoute(childConfig, data);\n        }\n\n        data.matchedUrl = '/' + data.urlArray.join('/');\n        return data;\n    }\n\n    private setCurrentRoute(result: IRouter.Data): void {\n        this.currentRoute = result.matchedUrl;\n    }\n\n    // send the given url to validation and call loadPage or redirect depend if we found an matched route or no\n    private dispatchRoute(url: string): void {\n        this.URL_DATA.DYNAMIC.PARAMS = {};\n        let result: IRouter.Data | false | undefined;\n\n        const defaultData: IRouter.Data = {\n            depth: 0,\n            components: [],\n            params: {},\n            matchedUrl: '',\n            urlArray: url.split('/').filter(e => e),\n            matchedRoute: []\n        }\n        const routeMap = this.config.$routeList;\n        for (const config of routeMap) {\n            result = this.validateRoute(config, {...defaultData, matchedRoute: config});\n            if (!!result) { break; }\n        }\n\n        const { success, error } = this.config;\n        if (!!result) {\n            this.URL_DATA.DYNAMIC.PARAMS = result.params;\n            this.setCurrentRoute(result);\n            if (success) { success(result); }\n            this.config.vDom.loadPage(result.components, result.params);\n        } else {\n            console.log('Route missmatch!', url);\n            if (error) { error(url); }\n            this.redirect('/error/404', '', {}, true);\n        }\n    }\n};\n\nexport const router = new Router();\n\n// test purpose\n// @ts-ignore\nwindow.router = router;\n","export const RULES: any = {\n    'NUMBER': /^[0-9]+$/,\n    'PHONE': /^[\\+ 0-9]+$/,\n    'ALPHA': /^[a-zA-Z]+$/,\n    'ALPHA_NUM': /^[a-zA-Z0-9]+$/,\n    'STR_AND_NUM': /^([0-9]+[a-zA-Z]+|[a-zA-Z]+[0-9]+|[a-zA-Z]+[0-9]+[a-zA-Z]+)$/,\n    'LOW_UP_NUM': /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*$/,\n    'SLUG': /^[a-zA-Z0-9-_]+$/,\n    'NAME': /^([a-zA-Z0-9 -]+)$/,\n    'NAME_HUN': /^([a-zA-Z0-9ÁÉÍÓÖŐÚÜŰÔÕÛáéíóöőúüűôõû -]+)$/,\n    'ADDRESS_HUN': /^([a-zA-Z0-9 ÁÉÍÓÖŐÚÜŰÔÕÛáéíóöőúüűôõû\\,\\.\\-]+)$/,\n    'STRING': (a: string): string => a, //'ESCAPE_STRING',    // it is special\n    'EMAIL': /^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+.[a-zA-Z]{2,4}$/,\n    'IP': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n};\n\nexport const validate = (string: string, rule: string): boolean => {\n    const r = RULES[rule];\n    if (typeof r === 'function') {\n        return r(string);\n    } else if(r) {\n        return r.test(string);\n    }\n    return false;\n}\n","import NavMenu from \"@layout/NavMenu\";\nimport { createStyles } from \"@core/JSS\";\nimport classDecoratorTest from \"../../decoratortests/class\";\nimport metaDecoratorTest from \"../../decoratortests/meta\";\nimport { build, Fragment } from \"@core/VDom\";\n\nclassDecoratorTest();\nmetaDecoratorTest();\n\nconst css = createStyles({\n    box: {\n        maxWidth: 500,\n        margin: 'auto',\n        padding: 16,\n        borderRadius: 16,\n        backgroundColor: 'rgba(0,0,0,0.2)',\n        marginTop: 32,\n    }\n});\n\nconst HomePage = (): JSX.Element => {\n    document.title = `Home Page`;\n    return (\n        <div>\n            <NavMenu />\n            <>\n                <main className={css.box}>\n                    <p>Welcome on PetraJS</p>\n                    <span>\n                        This is a for fun view render, it use JSX elements and virtual dom, \n                        you can find the config in <b>tsconfig.json</b>\n                    </span>\n                </main>\n            </>\n            {/* <UserTable initId={1} /> */}\n        </div>\n    );\n}\n\nexport default HomePage;\n","const test = () => {\n\n    // -------\n\n    type Constructor<T extends any> = new (...args: any[]) => T;\n\n    function log<T extends Constructor<object>>(constructor: T) {\n        console.log('decorator added at', new Date());\n        const newConstructor = function(...args: any[]) {\n            console.log('object was constructed at', new Date)\n            console.log('with this arguments', args)\n            return new constructor(...args);\n        }\n        newConstructor.prototype = constructor.prototype;\n        return newConstructor as unknown as T;\n    }\n\n    // ----------------------\n\n    @log\n    class Pet {\n        public myReadonlyProp: { something: string };\n        public pista = 1;\n        public b = 1;\n        constructor(\n            public name: string, \n            public age: number\n        ) {\n            console.log('original constructor')\n        }\n    }\n\n    // -------------\n    \n    setTimeout(() => {\n        const a = new Pet(\"Azor\", 12);\n        window['logClass'] = a;\n        console.log(a);\n    }, 3000)\n\n    // -----------------------\n}\n\nexport default test;","import NavMenu from \"@layout/NavMenu\";\nimport { build } from \"@core/VDom\";\nimport { createStyles } from \"@core/JSS\";\nimport TodoContainer from \"./sub/TodoContainer\";\n\nconst css = createStyles({\n    box: {\n        margin: '16px auto',\n        width: 300,\n        padding: 16,\n        backgroundColor: 'rgba(0,0,0,0.2)',\n        border: '1px dotted rgba(0,0,0,0.5)',\n        borderRadius: 16\n    }\n});\n\nconst TodoPage = (): JSX.Element => {\n    document.title = `Todo Page`;\n    return (\n        <div>\n            <NavMenu />\n            <div className={css.box}>\n                <TodoContainer />\n            </div>\n        </div>\n    );\n}\n\nexport default TodoPage;\n","\nimport { build, useEffect, useState } from \"@core/VDom\";\nimport { createStyles } from \"@core/JSS\";\nimport services from \"@service/index\";\nimport TodoItem from \"./TodoItem\";\nimport Todo from \"@model/Todo\";\n\nconst css = createStyles({\n    input: {\n        width: 'calc(100% - 16px)',\n        marginBottom: 16,\n        padding: '4px 8px'\n    }\n});\n\ninterface IState {\n    loading: boolean;\n    todos: Todo[];\n    title: string;\n}\n\nconst TodoContainer = () => {\n\n    const [state, setState] = useState<IState>({\n        loading: true,\n        todos: [],\n        title: '',\n    });\n\n    const { title } = state;\n\n    useEffect(() => {\n        services.todoService.loadTodos().then(todos => {\n            setState({ ...state, todos, loading: false });\n            services.todoService.todos = todos;\n        })\n    }, []);\n\n    const onEnter = (e: KeyboardEvent) => {\n        if (e.key === 'Enter' && title.length) {\n            services.todoService.addTodo(title);\n            const todos = services.todoService.todos;\n            (e.target as HTMLInputElement).value = '';\n            setState({ ...state, todos, title: '' });\n        }\n    }\n\n    const onDelete = async (id: string) => {\n        const todos = await services.todoService.deleteTodo(id);\n        setState({ ...state, todos });\n    }\n\n    return (\n        <div>\n            {state.loading && (\n                <div className='linear-activity'>\n                    <div className='indeterminate'></div>\n                </div>\n            )}\n            <input \n                className={css.input}\n                style={{ backgroundColor: `rgba(255,255,255,${title.length ? 1 : 0.2})` }}\n                type='text' \n                value={title} \n                onInput={(e: MouseEvent) => setState({...state, title: (e.target as HTMLInputElement).value })}\n                onKeyUp={onEnter}\n            />\n            {(state.todos).map(todo => <TodoItem {...todo} onDelete={onDelete} />)}\n        </div>\n    );\n}\n\nexport default TodoContainer;\n","import TodoService from \"./TodoService\";\n\nconst services = {\n    todoService: new TodoService()\n};\n\nexport default services;\n","import { delay } from \"@util/core\";\nimport { MeasureAsync, Readonly, autobind } from \"@decorators/index\";\nimport Todo from \"@model/Todo\";\n\nconst someTodo = [\n    {\n        id: 'longguuuiiiiddd1',\n        title: 'Buy flour',\n        created: new Date(),\n    },\n    {\n        id: 'longgeerrrgguuuiiiiddd1',\n        title: 'Eat cake',\n        created: new Date(),\n    },\n\n]\n\nclass TodoService {\n\n    @Readonly({\n        a: 1,\n        b: 2\n    })\n    public test: { a: number; b: number; };\n\n    public todos: Todo[] = [];\n\n    @MeasureAsync\n    @autobind\n    public async loadTodos(): Promise<Todo[]> {\n        const rndDelay = Math.random() * 3;\n        await delay(rndDelay);\n        const todos: Todo[] = JSON.parse(localStorage.getItem('todo') || '[]');\n        if (todos.length === 0) {\n            todos.push(...someTodo.map(x => Object.assign(new Todo(), x)));\n        }\n        this.todos = todos;\n        return todos;\n    }\n\n    @MeasureAsync\n    @autobind\n    public async saveTodos(todos?: Todo[]): Promise<void> {\n        if (!todos) { todos = this.todos; }\n        localStorage.setItem('todo', JSON.stringify(todos));\n    }\n\n    @MeasureAsync\n    @autobind\n    public addTodo(title: string) {\n        const newTodo: Todo = {\n            id: Math.random().toString(),\n            title: title,\n            created: new Date()\n        }\n        this.todos.push(newTodo);\n        this.saveTodos();\n        return newTodo;\n    }\n\n    @MeasureAsync\n    @autobind\n    public deleteTodo(id: string) {\n        this.todos = this.todos.filter(x => x.id !== id);\n        this.saveTodos(this.todos);\n        return this.todos;\n    }\n}\n\nexport default TodoService;\n\nwindow['TodoService'] = TodoService;","// method decorators\n\nexport function Measure (target: Object, propertyKey: string, descriptor: PropertyDescriptor): any {\n    const originalMethod = descriptor.value;\n  \n    descriptor.value = function (...args: any[]) {\n        const start = performance.now();\n        const result = originalMethod.apply(this, args);\n        const finish = performance.now();\n        console.log(`Execution time: ${finish - start} milliseconds`);\n        return result;\n    };\n  \n    return descriptor;\n};\n\nexport function MeasureAsync(target: Object, propertyKey: string, descriptor: PropertyDescriptor) {\n    const originalMethod = descriptor.value;\n  \n    descriptor.value = async function (...args: any[]) {\n        const start = performance.now();\n        const result = await originalMethod.apply(target, args);\n        const finish = performance.now();\n        console.info(`Execution time for \"${propertyKey}\": ${finish - start} milliseconds`);\n        return result;\n    };\n  \n    return descriptor;\n};\n\nexport function autobind (target: Object, propertyKey: string, descriptor: PropertyDescriptor): any {\n    if (typeof target[propertyKey] !== 'function') return;\n    target[propertyKey] = target[propertyKey].bind(target);\n};\n\n// property decorator\n\nexport const Readonly = (initValue: any) => (target: Object, propertyKey: string) => {\n    Object.defineProperty(target, propertyKey, {\n        value: Object.freeze(initValue)\n    }); \n};\n\nexport function Min(limit: number) {\n    return function(target: Object, propertyKey: string) { \n        let value : string;\n        const getter = () => { return value; };\n        const setter = (newVal: string) => {\n            if(newVal.length < limit) {\n                const msg = `Your ${propertyKey} property length is lower than ${limit}`;\n                Object.defineProperty(target, 'errors', {\n                    value: msg\n                });\n                console.error(msg);\n            } else {\n                value = newVal;\n            }      \n        }; \n        Object.defineProperty(target, propertyKey, {\n            get: getter,\n            set: setter\n        }); \n    } \n}","class Todo {\n    public id: string;\n    public title: string;\n    public created: Date;\n}\n\nexport default Todo;","import { createStyles } from \"@core/JSS\";\nimport { build } from \"@core/VDom\";\nimport Todo from \"@model/Todo\";\n\nconst css = createStyles({\n    item: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: '4px 8px',\n        transition: '0.3s',\n        '& span:last-child': {\n            cursor: 'pointer'\n        },\n        '&:hover': {\n            backgroundColor: 'rgba(0,0,0,0.1)'\n        }\n    }\n});\n\ntype FullProps = Todo & { onDelete: (id: string) => void; };\n\nconst TodoItem = ({ id, title, created, onDelete }: FullProps) => {\n\n    return (\n        <div className={css.item}>\n            <span children={title} />\n            <span children={'[DEL]'} onClick={() => onDelete(id)} /> \n        </div>\n    );\n}\n\nexport default TodoItem;\n","export type Versionable<T> = T & { \n    back: () => void;\n    showHistory: () => void;\n};\n\nconst test = () => {\n\n    type Constructor<T extends any> = new (...args: any[]) => T;\n    const history = Symbol(\"history\");\n\n    function versionable<T extends Constructor<object>>(constructor: T) {\n        const newConstructor = function(...args: any[]) {\n            const instance = new constructor(...args);\n            instance[history] = [];\n            let index: number = -1;\n            const proxy = new Proxy(instance, {\n                set(target, propertyKey, value) { \n                    if (target[propertyKey] !== value) {\n                        console.info('Object property was changed to: ', propertyKey,' - ', value)\n                        target[history].push([propertyKey, target[propertyKey]]);\n                        index = target[history].length;\n                        Reflect.set(target, propertyKey, value);\n                    } else {\n                        console.warn('no more history')\n                    }\n                    return true;\n                }\n            });\n            (instance as Versionable<typeof instance>).back = function () {\n                if (instance[history].length === 0) { return; }\n                const [lastProperty, lastValue] = instance[history].pop() || [];\n                console.info('Object property was reseted to: ', lastProperty,' - ', lastValue)\n                instance[lastProperty] = lastValue;\n            };\n            (instance as Versionable<typeof instance>).showHistory = function () {\n                console.table(instance[history]);\n            };\n            return proxy;\n        }\n        newConstructor.prototype = constructor.prototype;\n        return newConstructor as unknown as T;\n    }\n\n    // ========== class ==========\n    \n    @versionable\n    class Entity {\n        public id: string = '134sdw4353-dfvde4354';\n        public text: string = 'first text';\n        public name: string = 'unsaved title';\n        public show() {\n            console.table(Object.entries(this).filter(x => typeof x[1] !== 'function'));\n        }\n    }\n\n    // --------- test --------\n\n    const entity = (new Entity()) as Versionable<Entity>;\n    entity.text = \"i changed the text\";\n    entity.text = \"Third text\";\n    entity.name = \"Updated entity name\";\n    entity.text = \"Final looooooong text\";\n\n\n    window['entity'] = entity;\n\n    // --------- test in browser --------\n    entity.showHistory();  // show version history\n    entity.show();         // show the object with his current values\n    // entity.back();      // jump back by 1 version\n\n\n    // ====================\n};\n\nexport default test;\n"],"sourceRoot":""}